// bitmap file 
// (c) Technion IIT, Department of Electrical and Computer Engineering 2023 
// generated by the automatic Python tool 
 
 
 module treeBitMap (

					input	logic	clk, 
					input	logic	resetN, 
					input logic	[10:0] offsetX,// offset from top left  position 
					input logic	[10:0] offsetY, 
					input	logic	InsideRectangle, //input that the pixel is within a bracket 
					output	logic	drawingRequest, //output that the pixel should be dispalyed 
					output	logic	[7:0] RGBout  //rgb value from the bitmap 
 ) ; 
 
 
// generating the bitmap 
 
localparam logic [7:0] TRANSPARENT_ENCODING = 8'h00 ;// RGB value in the bitmap representing a transparent pixel  
logic[0:31][0:31][7:0] object_colors = {
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'hde,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h0c,8'h19,8'h19,8'h19,8'h15,8'hba,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h95,8'hde,8'h00,8'h00,8'h0c,8'h19,8'h19,8'h0c,8'h10,8'h10,8'h19,8'he0,8'h35,8'h19,8'h15,8'hde,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h0c,8'h19,8'h15,8'h75,8'h0c,8'h10,8'h10,8'h10,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h15,8'hde,8'h00,8'h2d,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h04,8'h10,8'h10,8'h10,8'ha0,8'h35,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h15,8'h10,8'h10,8'h15,8'h19,8'h19,8'h19,8'h10,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h04,8'h10,8'h15,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h14,8'h19,8'h19,8'h10,8'h10,8'h10,8'h10,8'he0,8'h6c,8'h19,8'h19,8'h19,8'h10,8'h10,8'h19,8'h0c,8'h0c,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h10,8'h10,8'h10,8'h10,8'h10,8'h15,8'h19,8'h15,8'h19,8'h19,8'h15,8'h60,8'h15,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h10,8'h0c,8'h00},
	{8'h00,8'h0c,8'h10,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h10,8'h10,8'h10,8'h64,8'h15,8'h10,8'h10,8'h19,8'h10,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h19,8'h04,8'h00},
	{8'h0c,8'h10,8'h10,8'h10,8'h10,8'h60,8'hc0,8'h30,8'h14,8'h10,8'h10,8'h10,8'h14,8'h15,8'h10,8'h10,8'h10,8'h19,8'h15,8'h19,8'h19,8'h14,8'h10,8'h15,8'h19,8'h2c,8'hc0,8'h14,8'h10,8'h14,8'h19,8'h96},
	{8'h00,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h30,8'h10,8'h10,8'h10,8'h0c,8'h10,8'h10,8'h10,8'h19,8'h19,8'h31,8'h75,8'h19,8'h19,8'h19,8'h19,8'h19,8'h10,8'h14,8'h10,8'h2c,8'h10,8'h19,8'h0c,8'h0c,8'h2d},
	{8'h00,8'h00,8'h0c,8'h24,8'hc0,8'h2c,8'h0c,8'h0c,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h24,8'h84,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h19,8'h19,8'h19,8'h19,8'h15,8'h0c,8'h00,8'h00},
	{8'h00,8'h04,8'h0c,8'h0c,8'h10,8'h10,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h00,8'h00},
	{8'h00,8'h00,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h64,8'h10,8'h10,8'h0c,8'h95,8'h00,8'h00},
	{8'h00,8'h2c,8'h0c,8'h0c,8'h0c,8'h0c,8'h0c,8'h0c,8'h60,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'h0c,8'h0c,8'ha0,8'h0c,8'h0c,8'h0c,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h0c,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h80,8'h80,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'ha0,8'hc0,8'h64,8'h10,8'h0c,8'h0c,8'h0c,8'h0c,8'h0c,8'he0,8'h80,8'h0c,8'h10,8'h0c,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h0c,8'h0c,8'h0c,8'h10,8'h0c,8'h0c,8'h10,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'hba,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h04,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'h10,8'h10,8'h10,8'h0c,8'h0c,8'h0c,8'h0c,8'h0c,8'h10,8'h0c,8'h0c,8'h04,8'h04,8'h9a,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h95,8'h0c,8'h0c,8'h04,8'h04,8'h91,8'h2d,8'h0c,8'h71,8'hda,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h20,8'h64,8'h8d,8'h91,8'hb5,8'h8d,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h24,8'h8d,8'h8d,8'hb5,8'h91,8'h10,8'h10,8'h0c,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h6d,8'h24,8'h8d,8'h91,8'hb1,8'h91,8'h96,8'h04,8'h0c,8'h2c,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h6d,8'h91,8'h91,8'h8d,8'h24,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h8d,8'h91,8'hb1,8'h91,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h8d,8'h8d,8'h8d,8'h8d,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h6d,8'h8d,8'h8d,8'h6d,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'hf0,8'h8c,8'h6d,8'h91,8'h6d,8'h6d,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h8d,8'h6d,8'h6d,8'h64,8'h0c,8'h11,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h64,8'h8c,8'h6d,8'h91,8'h8d,8'h64,8'h0d,8'h1a,8'h11,8'h11,8'h00,8'h11,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h91,8'h8d,8'hb1,8'h8d,8'h24,8'h95,8'h11,8'h1a,8'h11,8'h11,8'h11,8'h11,8'h0d,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h80,8'h80,8'h00,8'h00,8'h00,8'h80,8'ha0,8'h24,8'hd0,8'h8c,8'h64,8'hb6,8'h8d,8'h91,8'hf5,8'h70,8'h11,8'h11,8'h31,8'h11,8'h11,8'h0d,8'h11,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h80,8'h60,8'h00,8'h00,8'h00,8'hfa,8'h00,8'h00,8'h00,8'h00,8'h24,8'hb5,8'h8d,8'hb0,8'hd5,8'h00,8'h00,8'h9a,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00},
	{8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h24,8'h91,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00,8'h00}};

 
 
//////////--------------------------------------------------------------------------------------------------------------= 
//hit bit map has one bit per edge:  hit_colors[3:0] =   {Left, Top, Right, Bottom}	 
//there is one bit per edge, in the corner two bits are set  
 logic [0:3] [0:3] [3:0] hit_colors = 
		   {16'hC446,     
			16'h8C62,    
			16'h8932, 
			16'h9113}; 
 // pipeline (ff) to get the pixel color from the array 	 
//////////--------------------------------------------------------------------------------------------------------------= 
always_ff@(posedge clk or negedge resetN) 
begin 
	if(!resetN) begin 
		RGBout <=	8'h00; 
	end 
	else begin 
		RGBout <= TRANSPARENT_ENCODING ; // default  
 
		if (InsideRectangle == 1'b1) 
			RGBout <= object_colors[offsetY][offsetX]; 		 
	end 
end 
 
//////////--------------------------------------------------------------------------------------------------------------= 
// decide if to draw the pixel or not 
assign drawingRequest = (RGBout != TRANSPARENT_ENCODING) ? 1'b1 : 1'b0 ; // get optional transparent command from the bitmpap   
 
endmodule 
